{"version":3,"sources":["context.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","components/layout/TextInputGroup.js","components/Contacts/AddContact.js","components/Contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","onShowClick","e","showContactInfo","console","log","onDeleteClick","_ref","delete","t0","_x","_x2","_x3","_this2","_this$props$contact","name","email","phone","home_address","work_address","twitter","instagram","facebook","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","defaultProps","Contacts","Fragment","heading","Contacts_Contact","TextInputGroup","placeholder","label","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Header","branding","href","About","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Test","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.590ca7ae.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n//1. first make a new context \r\nconst Context = React.createContext();\r\nconst reducer =(state,action)=>\r\n{\r\n    //payload is just some data that has been sent along with the action\r\n    switch(action.type)\r\n    {\r\n        case 'DELETE_CONTACT':return {\r\n            ...state,\r\n            contacts :state.contacts.filter(contact=>contact.id!== action.payload)\r\n                };\r\n            \r\n            case 'ADD_CONTACT':return {\r\n            ...state,\r\n            contacts :[action.payload,...state.contacts]\r\n                };\r\n            \r\n            case 'UPDATE_CONTACT':return {\r\n            ...state,\r\n            contacts :state.contacts.map(contact=>\r\n                {\r\n                return contact.id===action.payload.id?(contact=action.payload):contact;\r\n                \r\n            })\r\n                };\r\n        default:return state; \r\n}\r\n};\r\n\r\n//2. provider component is where your entire data lives.\r\nexport class Provider extends Component{\r\n     state=\r\n        {\r\n        \r\n    contacts:[],\r\n         \r\n         dispatch :action=>\r\n         {\r\n         this.setState(state=>reducer(state,action))\r\n     }\r\n    };\r\n\r\n//Lifecycle methods\r\nasync componentDidMount()\r\n{\r\n    /*axios.get('https://jsonplaceholder.typicode.com/users')\r\n    .then(res=>this.setState({contacts:res.data}));*/\r\n    \r\n    //USing async await\r\n    \r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({contacts:res.data});\r\n}\r\nrender()\r\n{\r\n    return(\r\n        <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n        </Context.Provider>\r\n        )\r\n}\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nclass Contact extends Component {\r\n    \r\n    constructor()\r\n    {\r\n        super();  \r\n        this.state={\r\n        showContactInfo : false\r\n        };\r\n        //this.onshowClick() = this.onshowClick.bind(this);\r\n    }\r\n    \r\n\r\n//if you do not use arrow function, this keyword won't work for just onshowClick(){}\r\n  onShowClick=(e)=>\r\n    {\r\n        this.setState({showContactInfo:!this.state.showContactInfo});\r\n        console.log(e);\r\n    };\r\n\r\n//For an arrow function, we pust async before the parameters\r\n onDeleteClick=async(id,dispatch,e)=>\r\n    {\r\n     \r\n     //Since we are not gettin anything, we need not save the rquest response in a variable\r\n     try{\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({type:'DELETE_CONTACT',payload:id}); \r\n     }\r\n     catch(e)\r\n         {\r\n                    dispatch({type:'DELETE_CONTACT',payload:id}); \r\n \r\n         }\r\n      \r\n    };\r\n  \r\nrender() {\r\n      \r\n      const {id,name,email,phone,home_address,work_address,twitter,instagram,facebook} =this.props.contact;\r\n      const {showContactInfo} = this.state;\r\n      //or even using this.props.branding also works, but destructuring makes the code cleaner.\r\n        return(\r\n            <Consumer>\r\n            {value=>{\r\n             const {dispatch}=value;\r\n             return (\r\n             <div className=\"card card-body mb-3\">\r\n            <h4>{name}{' '}\r\n            <i \r\n            onClick={this.onShowClick}\r\n            className=\"fa fa-sort-desc\"\r\n            style={{cursor:'pointer'}}\r\n            ></i>\r\n            <i className=\"fa fa-times\" style={{cursor:'pointer',float:'right',color:'red'}}\r\n            onClick={this.onDeleteClick.bind(this,id,dispatch)} ></i>\r\n            \r\n            <Link to={`contact/edit/${id}`} >\r\n           \r\n            <i \r\n            className='fa fa-pencil' \r\n            style={{\r\n            cursor:'pointer',float:'right',color:'black',marginRight:'1rem'}}></i>\r\n            \r\n            </Link>\r\n            </h4>\r\n\r\n            {showContactInfo ? (\r\n            <ul className=\"list-group\">\r\n            <li className='list-group-item'>Email : {email}</li>\r\n            <li className='list-group-item'>Phone : {phone}</li>\r\n            <li className='list-group-item'>Home Address : {home_address}</li>\r\n            <li className='list-group-item'>Work Address : {work_address}</li>\r\n            <li className='list-group-item'>Twitter : {twitter}</li>\r\n            <li className='list-group-item'>Instagram : {instagram}</li>\r\n            <li className='list-group-item'>Facebook : {facebook}</li>\r\n            </ul>\r\n\r\n            ):null}\r\n\r\n            </div>\r\n             )\r\n            }}\r\n            </Consumer>\r\n\r\n            \r\n        )\r\n      \r\n  }\r\n    \r\n    \r\n}\r\n\r\n//note default props is defined outside the class.\r\nContact.defaultProps={\r\n        name:'Priya',\r\n        phone:'9450465058'\r\n        \r\n    }\r\n\r\nContact.propTypes ={\r\n    \r\n    contact:PropTypes.object.isRequired,\r\n}\r\nexport default Contact;\r\n"," //if you are using constructor only for initialising state, you need not a constructor, you can simply write state ={} inside a class directly without a constructor\r\n\r\nimport React,{Component} from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\nclass Contacts extends Component{\r\n    \r\n   \r\n  \r\n    \r\n    render()\r\n    {\r\n        return(\r\n            <Consumer>\r\n            {value=>\r\n            {\r\n            const {contacts} = value;\r\n            return(\r\n            <React.Fragment>\r\n            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Kişi </span> Listesi</h1>\r\n            <h3>{this.props.heading}</h3>\r\n            {contacts.map(contact=>(<Contact key={contact.id} contact={contact}\r\n            />\r\n            )\r\n            )\r\n            }\r\n            </React.Fragment>\r\n            )\r\n            }}\r\n            </Consumer>\r\n        \r\n        );\r\n        \r\n}}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nconst TextInputGroup=({name,value,placeholder,label,type,onChange,error})=>\r\n{\r\n    return(\r\n    \r\n            <div className=\"form-group\">\r\n                <label htmlFor={name}>{label}</label>\r\n                <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames(\"form-control form-control-lg\",\r\n                 {\"is-invalid\":error})}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                />\r\n                \r\n                    {error && <div className='invalid-feedback'> \r\n                {error}</div>\r\n                    }\r\n                </div>\r\n            );\r\n};\r\n \r\nTextInputGroup.propTypes={\r\n        name:PropTypes.string.isRequired,\r\n        label:PropTypes.string.isRequired,\r\n        placeholder:PropTypes.string.isRequired,\r\n        value:PropTypes.string.isRequired,\r\n        type:PropTypes.string.isRequired,\r\n        onChange:PropTypes.func.isRequired,\r\n        error:PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps=\r\n{\r\n    type:'text',\r\n}\r\n\r\nexport default TextInputGroup;","import React,{Component} from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component{\r\n    \r\n    state={\r\n        name:'',\r\n        email:'',\r\n        home_address: '',\r\n        work_address:'',\r\n        phone:'',\r\n        twitter:'',\r\n        instagram: '',\r\n        facebook:'',\r\n        errors:{}\r\n  \r\n    }\r\n\r\nonChange=e=>\r\n{\r\n    this.setState({[e.target.name]:e.target.value});\r\n}\r\nonSubmit=async(dispatch,e)=>\r\n{\r\n        e.preventDefault();\r\n\r\n    const {name,email,phone,home_address,work_address,twitter,instagram,facebook}=this.state;\r\n    \r\n    //Hata Kontrolü\r\n    if(name==='' )\r\n        {\r\n            this.setState({errors:{name:'İsim soyisim gereklidir!'}});\r\n            return;\r\n        }\r\n    if(email==='' )\r\n        {\r\n            this.setState({errors:{email:'Email gereklidir!'}});\r\n            return;\r\n        }\r\n    if(phone==='' )\r\n        {\r\n            this.setState({errors:{phone:'Telefon numarası gereklidir!'}});\r\n            return;\r\n        }\r\n    if(home_address==='' )\r\n        {\r\n            this.setState({errors:{home_address:'Ev adresi gereklidir!'}});\r\n            return;\r\n        }\r\n    if(work_address==='' )\r\n        {\r\n            this.setState({errors:{work_address:'İş adresi gereklidir!'}});\r\n            return;\r\n        }\r\n    if(twitter==='' )\r\n        {\r\n            this.setState({errors:{twitter:'Twitter gereklidir!'}});\r\n            return;\r\n        }\r\n    if(instagram==='' )\r\n        {\r\n            this.setState({errors:{instagram:'Instagram gereklidir !'}});\r\n            return;\r\n        }\r\n    if(facebook==='' )\r\n        {\r\n            this.setState({errors:{facebook:'Facebook gereklidir!'}});\r\n            return;\r\n        }\r\n\r\n\r\n    const newContact ={\r\n        name,\r\n        phone,\r\n        email,\r\n        home_address,\r\n        work_address,\r\n        twitter,\r\n        instagram,\r\n        facebook,\r\n    }\r\n    \r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n    \r\n    dispatch({type:'ADD_CONTACT',payload:res.data});\r\n    \r\n    \r\n    this.setState({\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        home_address: '',\r\n        work_address:'',\r\n        twitter:'',\r\n        instagram:'',\r\n        facebook:'',\r\n        errors:{},\r\n    })\r\n    \r\n    //For redirection\r\n    \r\n    this.props.history.push('/');\r\n}\r\n    render()\r\n    {\r\n         \r\n    const {name,email,phone,home_address, work_address,twitter,instagram,facebook, errors}=this.state;\r\n        \r\n        return(\r\n        <Consumer>\r\n            \r\n            {value=>\r\n            {\r\n                const{dispatch}=value;\r\n                return(\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-header\">\r\n            Kişi Ekleme Sayfası\r\n            </div>\r\n            <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                <TextInputGroup\r\n                    label=\"Ad-Soyad\"\r\n                    name=\"name\"\r\n                    placeholder=\"Ad-Soyadınızı giriniz\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email Girin\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Telefon Numarası\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Telefon numarası girin\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Ev Adresi\"\r\n                    name=\"home_address\"\r\n                    placeholder=\"Ev Adresi Girin\"\r\n                    value={home_address}\r\n                    onChange={this.onChange}\r\n                    error={errors.home_address}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"İş Adresi\"\r\n                    name=\"work_address\"\r\n                    placeholder=\"İş Adresi Girin\"\r\n                    value={work_address}\r\n                    onChange={this.onChange}\r\n                    error={errors.work_address}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Twitter \"\r\n                    name=\"twitter\"\r\n                    placeholder=\"Twitter Adresini Girin\"\r\n                    value={twitter}\r\n                    onChange={this.onChange}\r\n                    error={errors.twitter}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Instagram \"\r\n                    name=\"instagram\"\r\n                    placeholder=\"Instagram Adresini Girin\"\r\n                    value={instagram}\r\n                    onChange={this.onChange}\r\n                    error={errors.instagram}\r\n                  /><TextInputGroup\r\n                    label=\"Facebook \"\r\n                    name=\"facebook\"\r\n                    placeholder=\"Facebook Adresini Girin\"\r\n                    value={facebook}\r\n                    onChange={this.onChange}\r\n                    error={errors.facebook}\r\n                />\r\n            \r\n            <input type=\"submit\"\r\n            value=\"Kişiyi Ekle\"\r\n            className=\"btn btn-dark btn-block\"/>\r\n            </form>\r\n            </div>\r\n            </div>\r\n                )\r\n            }}\r\n            </Consumer>\r\n        \r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default AddContact;","import React,{Component} from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nclass EditContact extends Component{\r\n    //When you create a form, each input is going to be a part of the state.\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        home_address: '',\r\n        work_address: '',\r\n        twitter:'',\r\n        instagram:'',\r\n        facebook:'',\r\n        errors:{}\r\n  \r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        \r\n        const contact = res.data;\r\n        this.setState({name:contact.name,\r\n                      email:contact.email,\r\n                       phone:contact.phone,\r\n                       work_address:contact.work_address,\r\n                       home_address:contact.home_address,\r\n                       twitter:contact.twitter,\r\n                       instagram:contact.instagram,\r\n                       facebook:contact.facebook,                    \r\n                      })\r\n    }\r\nonChange=e=>\r\n{\r\n    this.setState({[e.target.name]:e.target.value});\r\n}\r\nonSubmit=async(dispatch,e)=>\r\n{\r\n        e.preventDefault();\r\n\r\n    const {name,email,phone,home_address,work_address,twitter,instagram,facebook}=this.state;\r\n    \r\n    //Check for Errors\r\n    if(name==='' )\r\n        {\r\n            this.setState({errors:{name:'Name is required !'}});\r\n            return;\r\n        }\r\n    if(email==='' )\r\n        {\r\n            this.setState({errors:{email:'Email is required !'}});\r\n            return;\r\n        }\r\n    if(phone==='' )\r\n        {\r\n            this.setState({errors:{phone:'Phone is required !'}});\r\n            return;\r\n        }\r\n    if(home_address==='' )\r\n        {\r\n            this.setState({errors:{home_address:'home address is required !'}});\r\n            return;\r\n        }\r\n    if(work_address==='' )\r\n        {\r\n            this.setState({errors:{work_address:'work address is required !'}});\r\n            return;\r\n        }\r\n    if(twitter==='' )\r\n        {\r\n            this.setState({errors:{twitter:'twitter address is required !'}});\r\n            return;\r\n        }\r\n    if(instagram==='' )\r\n        {\r\n            this.setState({errors:{instagram:'instagram address is required !'}});\r\n            return;\r\n        }\r\n    if(facebook==='' )\r\n        {\r\n            this.setState({errors:{facebook:'facebook address is required !'}});\r\n            return;\r\n        }\r\n    \r\n    const updateContact ={\r\n        name,\r\n        phone,\r\n        email,\r\n        home_address,\r\n        work_address,\r\n        twitter,\r\n        instagram,\r\n        facebook,\r\n    }\r\n    \r\n    //put request is to update\r\n     const {id} = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updateContact);\r\n        \r\n    \r\n    dispatch({type:'UPDATE_CONTACT',payload:res.data});\r\n    \r\n    //Clear form\r\n    this.setState({\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        home_address: '',\r\n        work_address: '',\r\n        twitter:'',\r\n        instagram:'',\r\n        facebook:'',\r\n        errors:{},\r\n    })\r\n    \r\n    //For redirection\r\n    \r\n    this.props.history.push('/');\r\n}\r\n    render()\r\n    {\r\n         \r\n    const {name,email,phone,home_address, work_address, twitter,instagram,facebook,errors}=this.state;\r\n        \r\n        return(\r\n        <Consumer>\r\n            \r\n            {value=>\r\n            {\r\n                const{dispatch}=value;\r\n                return(\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-header\">\r\n            Kişiyi Düzenle\r\n            </div>\r\n            <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                <TextInputGroup\r\n                    label=\"Ad-Soyad\"\r\n                    name=\"name\"\r\n                    placeholder=\"Ad-Soyadınızı giriniz\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email Girin\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Telefon Numarası\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Telefon numarası girin\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Ev Adresi\"\r\n                    name=\"home_address\"\r\n                    placeholder=\"Ev Adresi Girin\"\r\n                    value={home_address}\r\n                    onChange={this.onChange}\r\n                    error={errors.home_address}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"İş Adresi\"\r\n                    name=\"work_address\"\r\n                    placeholder=\"İş Adresi Girin\"\r\n                    value={work_address}\r\n                    onChange={this.onChange}\r\n                    error={errors.work_address}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Twitter\"\r\n                    name=\"twitter\"\r\n                    placeholder=\"Twitter Adresini Girin\"\r\n                    value={twitter}\r\n                    onChange={this.onChange}\r\n                    error={errors.twitter}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Instagram\"\r\n                    name=\"instagram\"\r\n                    placeholder=\"Instagram Adresini Girin\"\r\n                    value={instagram}\r\n                    onChange={this.onChange}\r\n                    error={errors.instagram}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Facebook\"\r\n                    name=\"facebook\"\r\n                    placeholder=\"Facebook Adresini Girin\"\r\n                    value={facebook}\r\n                    onChange={this.onChange}\r\n                    error={errors.facebook}\r\n                  />\r\n            \r\n            <input type=\"submit\"\r\n            value=\"Kişiyi Güncelle\"\r\n            className=\"btn btn-light btn-block\"/>\r\n            </form>\r\n            </div>\r\n            </div>\r\n                )\r\n            }}\r\n            </Consumer>\r\n        \r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header =props=>\r\n{\r\n    const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n               <i className='fa fa-home'/> Anasayfa\r\n         </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n               <i className='fa fa-plus'/>Kişi Ekle\r\n         </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n               <i className='fa fa-question'/>Hakkında\r\n         </Link>\r\n        </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    );\r\n\r\n};\r\n\r\n//You can define default values for your props by assigning to the special defaultProps property\r\nHeader.defaultProps={\r\n    branding: \"Contact App Default\"\r\n}\r\n\r\nHeader.propTypes={\r\n    branding:PropTypes.string.isRequired\r\n}\r\nexport default Header;","\r\n\r\nimport React from 'react';\r\nconst About =props=>\r\n{\r\n    \r\n    return (\r\n        <div>\r\n        <h1 className=\"display-form\">Adres Defteri Hakkında</h1>\r\n        <p className=\"lead\"> Bu uygulama, basitçe kişileri \"Kişi Ekle\" sayfasından ekledikten sonra \"Anasayfada\" bulunan kişi listesinde görmenizi sağlar ve bu sayfadan kişilerinizin isim, soyisim, telefon, e-mail gibi bilgileri saklamanızı sağlar. </p>\r\n        <p className=\"text-secondary\"> Copyright © Sinem Morzambak. Tüm hakları saklıdır. </p>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default About;","//For pages that could not be found\r\nimport React from 'react';\r\nconst NotFound =()=>\r\n{\r\n    \r\n    return (\r\n        <div>\r\n        <h1 className=\"display-form\"><span className=\"text-danger\">404 </span>Page Not Found</h1>\r\n        <p className=\"lead\"> Sorry, that page does not exist</p>\r\n       \r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default NotFound;","//Broser Router does not work very well with github pages, so we use HashRouter\r\n\r\nimport React from 'react';\r\nimport Contacts from './components/Contacts/Contacts';\r\nimport AddContact from './components/Contacts/AddContact'\r\nimport EditContact from './components/Contacts/EditContact';\r\n\r\nimport Header from './components/layout/Header';\r\nimport About from './components/pages/About';\r\nimport NotFound from './components/pages/NotFound';\r\nimport Test from './components/test/Test';\r\n\r\nimport {Provider} from './context';\r\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n   \r\n  return (\r\n      <Provider >\r\n      <Router>\r\n    <div className=\"App\">\r\n        <Header branding=\"Adres Defteri\"/>\r\n      <div className=\"container\">\r\n      <Switch>\r\n      <Route exact path=\"/\" component={Contacts}/>\r\n     <Route exact path=\"/about\" component={About}/>\r\n     <Route exact path=\"/contact/add\" component={AddContact}/>\r\n      <Route exact path=\"/test\" component={Test}/>\r\n    <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\r\n\r\n     <Route  component={NotFound}/>\r\n\r\n      </Switch>\r\n      </div>\r\n        </div>\r\n      </Router>\r\n      </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/*\r\n1. Clear App.css\r\n2. Delete the logo file\r\n3. Delete index.css\r\n4. Remove the index.css dependency from index.js\r\n5. Remove the logo dependency and all content except the main div(classname=\"App\") from App.js\r\n6. Smart components vs dumb components\r\n7. Smart ones have a state and need a class, they change while dumb components do not have state.\r\n8. With dumb components you could simply use a stateless function but any component that has a state needs to be a class.\r\n9. \r\n\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}