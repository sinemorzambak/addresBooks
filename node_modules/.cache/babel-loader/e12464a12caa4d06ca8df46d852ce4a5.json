{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sinem Morzambak\\\\Desktop\\\\adres-defterim\\\\src\\\\components\\\\Contacts\\\\EditContact.js\";\nimport React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      home_address: '',\n      work_address: '',\n      twitter: '',\n      instagram: '',\n      facebook: '',\n      errors: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = async (dispatch, e) => {\n      e.preventDefault();\n      const _this$state = this.state,\n            name = _this$state.name,\n            email = _this$state.email,\n            phone = _this$state.phone,\n            home_address = _this$state.home_address,\n            work_address = _this$state.work_address,\n            twitter = _this$state.twitter,\n            instagram = _this$state.instagram,\n            facebook = _this$state.facebook; //Check for Errors\n\n      if (name === '') {\n        this.setState({\n          errors: {\n            name: 'Name is required !'\n          }\n        });\n        return;\n      }\n\n      if (email === '') {\n        this.setState({\n          errors: {\n            email: 'Email is required !'\n          }\n        });\n        return;\n      }\n\n      if (phone === '') {\n        this.setState({\n          errors: {\n            phone: 'Phone is required !'\n          }\n        });\n        return;\n      }\n\n      if (home_address === '') {\n        this.setState({\n          errors: {\n            home_address: 'home address is required !'\n          }\n        });\n        return;\n      }\n\n      if (work_address === '') {\n        this.setState({\n          errors: {\n            work_address: 'work address is required !'\n          }\n        });\n        return;\n      }\n\n      if (twitter === '') {\n        this.setState({\n          errors: {\n            twitter: 'twitter address is required !'\n          }\n        });\n        return;\n      }\n\n      if (instagram === '') {\n        this.setState({\n          errors: {\n            instagram: 'instagram address is required !'\n          }\n        });\n        return;\n      }\n\n      if (facebook === '') {\n        this.setState({\n          errors: {\n            facebook: 'facebook address is required !'\n          }\n        });\n        return;\n      }\n\n      const updateContact = {\n        name,\n        phone,\n        email,\n        home_address,\n        work_address,\n        twitter,\n        instagram,\n        facebook //put request is to update\n\n      };\n      const id = this.props.match.params.id;\n      const res = await axios.put(\"https://jsonplaceholder.typicode.com/users/\".concat(id), updateContact);\n      dispatch({\n        type: 'UPDATE_CONTACT',\n        payload: res.data\n      }); //Clear form\n\n      this.setState({\n        name: '',\n        email: '',\n        phone: '',\n        home_address: '',\n        work_address: '',\n        twitter: '',\n        instagram: '',\n        facebook: '',\n        errors: {}\n      }); //For redirection\n\n      this.props.history.push('/');\n    };\n  }\n\n  async componentDidMount() {\n    const id = this.props.match.params.id;\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users/\".concat(id));\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n      work_address: contact.work_address,\n      home_address: contact.home_address,\n      twitter: contact.twitter,\n      instagram: contact.instagram,\n      facebook: contact.facebook\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          phone = _this$state2.phone,\n          home_address = _this$state2.home_address,\n          work_address = _this$state2.work_address,\n          twitter = _this$state2.twitter,\n          instagram = _this$state2.instagram,\n          facebook = _this$state2.facebook,\n          errors = _this$state2.errors;\n    return React.createElement(Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, value => {\n      const dispatch = value.dispatch;\n      return React.createElement(\"div\", {\n        className: \"card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Edit Contact\"), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this, dispatch),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(TextInputGroup, {\n        label: \"Name\",\n        name: \"name\",\n        placeholder: \"Enter Name\",\n        value: name,\n        onChange: this.onChange,\n        error: errors.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        value: email,\n        onChange: this.onChange,\n        error: errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        label: \"Phone\",\n        name: \"phone\",\n        placeholder: \"Enter Phone\",\n        value: phone,\n        onChange: this.onChange,\n        error: errors.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        label: \"home_address\",\n        name: \"home_address\",\n        placeholder: \"Enter address\",\n        value: home_address,\n        onChange: this.onChange,\n        error: errors.home_address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        label: \"work_adress\",\n        name: \"work_address\",\n        placeholder: \"Enter address\",\n        value: work_address,\n        onChange: this.onChange,\n        error: errors.work_address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        label: \"Twitter name\",\n        name: \"twitter\",\n        placeholder: \"Enter twitter name\",\n        value: twitter,\n        onChange: this.onChange,\n        error: errors.twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        label: \"Instagram name\",\n        name: \"instagram\",\n        placeholder: \"Enter instagram name\",\n        value: instagram,\n        onChange: this.onChange,\n        error: errors.instagram,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        label: \"Facebook name\",\n        name: \"facebook\",\n        placeholder: \"Enter facebo name\",\n        value: twitter,\n        onChange: this.onChange,\n        error: errors.twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Update Contact\",\n        className: \"btn btn-light btn-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }))));\n    });\n  }\n\n}\n\nexport default EditContact;","map":{"version":3,"sources":["C:\\Users\\Sinem Morzambak\\Desktop\\adres-defterim\\src\\components\\Contacts\\EditContact.js"],"names":["React","Component","Consumer","TextInputGroup","axios","EditContact","state","name","email","phone","home_address","work_address","twitter","instagram","facebook","errors","onChange","e","setState","target","value","onSubmit","dispatch","preventDefault","updateContact","id","props","match","params","res","put","type","payload","data","history","push","componentDidMount","get","contact","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAE/BK,KAF+B,GAEzB;AACFC,MAAAA,IAAI,EAAC,EADH;AAEFC,MAAAA,KAAK,EAAC,EAFJ;AAGFC,MAAAA,KAAK,EAAC,EAHJ;AAIFC,MAAAA,YAAY,EAAE,EAJZ;AAKFC,MAAAA,YAAY,EAAE,EALZ;AAMFC,MAAAA,OAAO,EAAC,EANN;AAOFC,MAAAA,SAAS,EAAC,EAPR;AAQFC,MAAAA,QAAQ,EAAC,EARP;AASFC,MAAAA,MAAM,EAAC;AATL,KAFyB;;AAAA,SA+BnCC,QA/BmC,GA+B1BC,CAAC,IACV;AACI,WAAKC,QAAL,CAAc;AAAC,SAACD,CAAC,CAACE,MAAF,CAASZ,IAAV,GAAgBU,CAAC,CAACE,MAAF,CAASC;AAA1B,OAAd;AACH,KAlCkC;;AAAA,SAmCnCC,QAnCmC,GAmC1B,OAAMC,QAAN,EAAeL,CAAf,KACT;AACQA,MAAAA,CAAC,CAACM,cAAF;AADR,0BAGkF,KAAKjB,KAHvF;AAAA,YAGWC,IAHX,eAGWA,IAHX;AAAA,YAGgBC,KAHhB,eAGgBA,KAHhB;AAAA,YAGsBC,KAHtB,eAGsBA,KAHtB;AAAA,YAG4BC,YAH5B,eAG4BA,YAH5B;AAAA,YAGyCC,YAHzC,eAGyCA,YAHzC;AAAA,YAGsDC,OAHtD,eAGsDA,OAHtD;AAAA,YAG8DC,SAH9D,eAG8DA,SAH9D;AAAA,YAGwEC,QAHxE,eAGwEA,QAHxE,EAKI;;AACA,UAAGP,IAAI,KAAG,EAAV,EACI;AACI,aAAKW,QAAL,CAAc;AAACH,UAAAA,MAAM,EAAC;AAACR,YAAAA,IAAI,EAAC;AAAN;AAAR,SAAd;AACA;AACH;;AACL,UAAGC,KAAK,KAAG,EAAX,EACI;AACI,aAAKU,QAAL,CAAc;AAACH,UAAAA,MAAM,EAAC;AAACP,YAAAA,KAAK,EAAC;AAAP;AAAR,SAAd;AACA;AACH;;AACL,UAAGC,KAAK,KAAG,EAAX,EACI;AACI,aAAKS,QAAL,CAAc;AAACH,UAAAA,MAAM,EAAC;AAACN,YAAAA,KAAK,EAAC;AAAP;AAAR,SAAd;AACA;AACH;;AACL,UAAGC,YAAY,KAAG,EAAlB,EACI;AACI,aAAKQ,QAAL,CAAc;AAACH,UAAAA,MAAM,EAAC;AAACL,YAAAA,YAAY,EAAC;AAAd;AAAR,SAAd;AACA;AACH;;AACL,UAAGC,YAAY,KAAG,EAAlB,EACI;AACI,aAAKO,QAAL,CAAc;AAACH,UAAAA,MAAM,EAAC;AAACJ,YAAAA,YAAY,EAAC;AAAd;AAAR,SAAd;AACA;AACH;;AACL,UAAGC,OAAO,KAAG,EAAb,EACI;AACI,aAAKM,QAAL,CAAc;AAACH,UAAAA,MAAM,EAAC;AAACH,YAAAA,OAAO,EAAC;AAAT;AAAR,SAAd;AACA;AACH;;AACL,UAAGC,SAAS,KAAG,EAAf,EACI;AACI,aAAKK,QAAL,CAAc;AAACH,UAAAA,MAAM,EAAC;AAACF,YAAAA,SAAS,EAAC;AAAX;AAAR,SAAd;AACA;AACH;;AACL,UAAGC,QAAQ,KAAG,EAAd,EACI;AACI,aAAKI,QAAL,CAAc;AAACH,UAAAA,MAAM,EAAC;AAACD,YAAAA,QAAQ,EAAC;AAAV;AAAR,SAAd;AACA;AACH;;AAEL,YAAMU,aAAa,GAAE;AACjBjB,QAAAA,IADiB;AAEjBE,QAAAA,KAFiB;AAGjBD,QAAAA,KAHiB;AAIjBE,QAAAA,YAJiB;AAKjBC,QAAAA,YALiB;AAMjBC,QAAAA,OANiB;AAOjBC,QAAAA,SAPiB;AAQjBC,QAAAA,QARiB,CAWrB;;AAXqB,OAArB;AA/CJ,YA2DYW,EA3DZ,GA2DkB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MA3DnC,CA2DYH,EA3DZ;AA4DQ,YAAMI,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,sDAAwDL,EAAxD,GAA6DD,aAA7D,CAAlB;AAGJF,MAAAA,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAC,gBAAN;AAAuBC,QAAAA,OAAO,EAACH,GAAG,CAACI;AAAnC,OAAD,CAAR,CA/DJ,CAiEI;;AACA,WAAKf,QAAL,CAAc;AACVX,QAAAA,IAAI,EAAC,EADK;AAEVC,QAAAA,KAAK,EAAC,EAFI;AAGVC,QAAAA,KAAK,EAAC,EAHI;AAIVC,QAAAA,YAAY,EAAE,EAJJ;AAKVC,QAAAA,YAAY,EAAE,EALJ;AAMVC,QAAAA,OAAO,EAAC,EANE;AAOVC,QAAAA,SAAS,EAAC,EAPA;AAQVC,QAAAA,QAAQ,EAAC,EARC;AASVC,QAAAA,MAAM,EAAC;AATG,OAAd,EAlEJ,CA8EI;;AAEA,WAAKW,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,KArHkC;AAAA;;AAe/B,QAAMC,iBAAN,GACA;AAAA,UACWX,EADX,GACiB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADlC,CACWH,EADX;AAEI,UAAMI,GAAG,GAAG,MAAMzB,KAAK,CAACiC,GAAN,sDAAwDZ,EAAxD,EAAlB;AAEA,UAAMa,OAAO,GAAGT,GAAG,CAACI,IAApB;AACA,SAAKf,QAAL,CAAc;AAACX,MAAAA,IAAI,EAAC+B,OAAO,CAAC/B,IAAd;AACAC,MAAAA,KAAK,EAAC8B,OAAO,CAAC9B,KADd;AAECC,MAAAA,KAAK,EAAC6B,OAAO,CAAC7B,KAFf;AAGCE,MAAAA,YAAY,EAAC2B,OAAO,CAAC3B,YAHtB;AAICD,MAAAA,YAAY,EAAC4B,OAAO,CAAC5B,YAJtB;AAKCE,MAAAA,OAAO,EAAC0B,OAAO,CAAC1B,OALjB;AAMCC,MAAAA,SAAS,EAACyB,OAAO,CAACzB,SANnB;AAOCC,MAAAA,QAAQ,EAACwB,OAAO,CAACxB;AAPlB,KAAd;AASH;;AAwFDyB,EAAAA,MAAM,GACN;AAAA,yBAEuF,KAAKjC,KAF5F;AAAA,UAEOC,IAFP,gBAEOA,IAFP;AAAA,UAEYC,KAFZ,gBAEYA,KAFZ;AAAA,UAEkBC,KAFlB,gBAEkBA,KAFlB;AAAA,UAEwBC,YAFxB,gBAEwBA,YAFxB;AAAA,UAEsCC,YAFtC,gBAEsCA,YAFtC;AAAA,UAEoDC,OAFpD,gBAEoDA,OAFpD;AAAA,UAE4DC,SAF5D,gBAE4DA,SAF5D;AAAA,UAEsEC,QAFtE,gBAEsEA,QAFtE;AAAA,UAE+EC,MAF/E,gBAE+EA,MAF/E;AAII,WACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKK,KAAK,IACN;AAAA,YACUE,QADV,GACoBF,KADpB,CACUE,QADV;AAEI,aACJ;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAIA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,QAAQ,EAAE,KAAKD,QAAL,CAAcmB,IAAd,CAAmB,IAAnB,EAAwBlB,QAAxB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AACI,QAAA,KAAK,EAAC,MADV;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,YAHhB;AAII,QAAA,KAAK,EAAEf,IAJX;AAKI,QAAA,QAAQ,EAAE,KAAKS,QALnB;AAMI,QAAA,KAAK,EAAED,MAAM,CAACR,IANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASM,oBAAC,cAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC,aAJd;AAKE,QAAA,KAAK,EAAEC,KALT;AAME,QAAA,QAAQ,EAAE,KAAKQ,QANjB;AAOE,QAAA,KAAK,EAAED,MAAM,CAACP,KAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATN,EAkBM,oBAAC,cAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,WAAW,EAAC,aAHd;AAIE,QAAA,KAAK,EAAEC,KAJT;AAKE,QAAA,QAAQ,EAAE,KAAKO,QALjB;AAME,QAAA,KAAK,EAAED,MAAM,CAACN,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBN,EA0BM,oBAAC,cAAD;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,WAAW,EAAC,eAHd;AAIE,QAAA,KAAK,EAAEC,YAJT;AAKE,QAAA,QAAQ,EAAE,KAAKM,QALjB;AAME,QAAA,KAAK,EAAED,MAAM,CAACL,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BN,EAkCM,oBAAC,cAAD;AACE,QAAA,KAAK,EAAC,aADR;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,WAAW,EAAC,eAHd;AAIE,QAAA,KAAK,EAAEC,YAJT;AAKE,QAAA,QAAQ,EAAE,KAAKK,QALjB;AAME,QAAA,KAAK,EAAED,MAAM,CAACJ,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlCN,EA0CM,oBAAC,cAAD;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,WAAW,EAAC,oBAHd;AAIE,QAAA,KAAK,EAAEC,OAJT;AAKE,QAAA,QAAQ,EAAE,KAAKI,QALjB;AAME,QAAA,KAAK,EAAED,MAAM,CAACH,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1CN,EAkDM,oBAAC,cAAD;AACE,QAAA,KAAK,EAAC,gBADR;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,WAAW,EAAC,sBAHd;AAIE,QAAA,KAAK,EAAEC,SAJT;AAKE,QAAA,QAAQ,EAAE,KAAKG,QALjB;AAME,QAAA,KAAK,EAAED,MAAM,CAACF,SANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlDN,EA0DM,oBAAC,cAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,mBAHd;AAIE,QAAA,KAAK,EAAED,OAJT;AAKE,QAAA,QAAQ,EAAE,KAAKI,QALjB;AAME,QAAA,KAAK,EAAED,MAAM,CAACH,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1DN,EAmEA;AAAO,QAAA,IAAI,EAAC,QAAZ;AACA,QAAA,KAAK,EAAC,gBADN;AAEA,QAAA,SAAS,EAAC,yBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnEA,CADA,CAJA,CADI;AAgFH,KArFL,CADA;AA2FH;;AAtN8B;;AAyNnC,eAAeP,WAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nclass EditContact extends Component{\r\n    //When you create a form, each input is going to be a part of the state.\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        home_address: '',\r\n        work_address: '',\r\n        twitter:'',\r\n        instagram:'',\r\n        facebook:'',\r\n        errors:{}\r\n  \r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        \r\n        const contact = res.data;\r\n        this.setState({name:contact.name,\r\n                      email:contact.email,\r\n                       phone:contact.phone,\r\n                       work_address:contact.work_address,\r\n                       home_address:contact.home_address,\r\n                       twitter:contact.twitter,\r\n                       instagram:contact.instagram,\r\n                       facebook:contact.facebook,                    \r\n                      })\r\n    }\r\nonChange=e=>\r\n{\r\n    this.setState({[e.target.name]:e.target.value});\r\n}\r\nonSubmit=async(dispatch,e)=>\r\n{\r\n        e.preventDefault();\r\n\r\n    const {name,email,phone,home_address,work_address,twitter,instagram,facebook}=this.state;\r\n    \r\n    //Check for Errors\r\n    if(name==='' )\r\n        {\r\n            this.setState({errors:{name:'Name is required !'}});\r\n            return;\r\n        }\r\n    if(email==='' )\r\n        {\r\n            this.setState({errors:{email:'Email is required !'}});\r\n            return;\r\n        }\r\n    if(phone==='' )\r\n        {\r\n            this.setState({errors:{phone:'Phone is required !'}});\r\n            return;\r\n        }\r\n    if(home_address==='' )\r\n        {\r\n            this.setState({errors:{home_address:'home address is required !'}});\r\n            return;\r\n        }\r\n    if(work_address==='' )\r\n        {\r\n            this.setState({errors:{work_address:'work address is required !'}});\r\n            return;\r\n        }\r\n    if(twitter==='' )\r\n        {\r\n            this.setState({errors:{twitter:'twitter address is required !'}});\r\n            return;\r\n        }\r\n    if(instagram==='' )\r\n        {\r\n            this.setState({errors:{instagram:'instagram address is required !'}});\r\n            return;\r\n        }\r\n    if(facebook==='' )\r\n        {\r\n            this.setState({errors:{facebook:'facebook address is required !'}});\r\n            return;\r\n        }\r\n    \r\n    const updateContact ={\r\n        name,\r\n        phone,\r\n        email,\r\n        home_address,\r\n        work_address,\r\n        twitter,\r\n        instagram,\r\n        facebook,\r\n    }\r\n    \r\n    //put request is to update\r\n     const {id} = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updateContact);\r\n        \r\n    \r\n    dispatch({type:'UPDATE_CONTACT',payload:res.data});\r\n    \r\n    //Clear form\r\n    this.setState({\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        home_address: '',\r\n        work_address: '',\r\n        twitter:'',\r\n        instagram:'',\r\n        facebook:'',\r\n        errors:{},\r\n    })\r\n    \r\n    //For redirection\r\n    \r\n    this.props.history.push('/');\r\n}\r\n    render()\r\n    {\r\n         \r\n    const {name,email,phone,home_address, work_address, twitter,instagram,facebook,errors}=this.state;\r\n        \r\n        return(\r\n        <Consumer>\r\n            \r\n            {value=>\r\n            {\r\n                const{dispatch}=value;\r\n                return(\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-header\">\r\n            Edit Contact\r\n            </div>\r\n            <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"home_address\"\r\n                    name=\"home_address\"\r\n                    placeholder=\"Enter address\"\r\n                    value={home_address}\r\n                    onChange={this.onChange}\r\n                    error={errors.home_address}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"work_adress\"\r\n                    name=\"work_address\"\r\n                    placeholder=\"Enter address\"\r\n                    value={work_address}\r\n                    onChange={this.onChange}\r\n                    error={errors.work_address}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Twitter name\"\r\n                    name=\"twitter\"\r\n                    placeholder=\"Enter twitter name\"\r\n                    value={twitter}\r\n                    onChange={this.onChange}\r\n                    error={errors.twitter}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Instagram name\"\r\n                    name=\"instagram\"\r\n                    placeholder=\"Enter instagram name\"\r\n                    value={instagram}\r\n                    onChange={this.onChange}\r\n                    error={errors.instagram}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Facebook name\"\r\n                    name=\"facebook\"\r\n                    placeholder=\"Enter facebo name\"\r\n                    value={twitter}\r\n                    onChange={this.onChange}\r\n                    error={errors.twitter}\r\n                  />\r\n            \r\n            <input type=\"submit\"\r\n            value=\"Update Contact\"\r\n            className=\"btn btn-light btn-block\"/>\r\n            </form>\r\n            </div>\r\n            </div>\r\n                )\r\n            }}\r\n            </Consumer>\r\n        \r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default EditContact;"]},"metadata":{},"sourceType":"module"}